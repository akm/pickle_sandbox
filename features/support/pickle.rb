# -*- coding: utf-8 -*-
# this file generated by script/generate pickle [paths] [email]
#
# Make sure that you are loading your factory of choice in your cucumber environment
#
# For machinist add: features/support/machinist.rb
#
#    require 'machinist/active_record' # or your chosen adaptor
#    require File.dirname(__FILE__) + '/../../spec/blueprints' # or wherever your blueprints are
#    Before { Sham.reset } # to reset Sham's seed between scenarios so each run has same random sequences
#
# For FactoryGirl add: features/support/factory_girl.rb
#
#    require 'factory_girl'
#    require File.dirname(__FILE__) + '/../../spec/factories' # or wherever your factories are
#
# You may also need to add gem dependencies on your factory of choice in <tt>config/environments/cucumber.rb</tt>

require 'pickle/world'
# Example of configuring pickle:
#
# Pickle.configure do |config|
#   config.adapters = [:machinist]
#   config.map 'I', 'myself', 'me', 'my', :to => 'user: "me"'
# end
require 'pickle/path/world'
require 'pickle/email/world'


module Pickle::I18n
  class << self
    def model_translations
      @model_translations ||= {}
    end

    def model_attribute_translations
      @model_attribute_translations ||= {}
    end
  end
end

Pickle::I18n.model_translations["商品"] = "product"
Pickle::I18n.model_attribute_translations["product"] = {"名称" => "name", "価格" => "price"}

Pickle::Session.module_eval do

  def create_model_with_i18n_attribute_names(orig_pickle_ref, orig_fields = nil)
    pickle_ref = Pickle::I18n.model_translations[orig_pickle_ref] || orig_pickle_ref
    raise ArgumentError, "No model_translation found: #{orig_pickle_ref}" unless orig_pickle_ref

    if attr_trans = Pickle::I18n.model_attribute_translations[pickle_ref]
      case orig_fields
      when String then
        fields = orig_fields.dup
        attr_trans.each{|k,v| fields.gsub!(k, v)}
      when Hash then
        fields = orig_fields.inject({}){|d, (k, v)| d[ attr_trans[k] || k ] = v; d }
      else
        raise "Unsupported fields: #{fields.inspect}"
      end
    end
    fields ||= orig_fields

    create_model_without_i18n_attribute_names(pickle_ref, fields)
  end

  alias_method :create_model_without_i18n_attribute_names, :create_model
  alias_method :create_model, :create_model_with_i18n_attribute_names
end


Pickle::Parser.module_eval do
  def match_field
    # "(?:\\w+: #{match_value})"
    "(?:\s*[^:]+: #{match_value})"
  end

  def capture_key_and_value_in_field
    # "(?:(\\w+): #{capture_value})"
    "(?:\s*([^:]+): #{capture_value})"
  end

end


Pickle.configure do |config|
  # config.factories の中身はこんな感じ
  #   {"product"=>#<Pickle::Adapter::FactoryGirl:0x00000102b0b618 @klass=Product(id: integer, name: string, price: decimal, created_at: datetime, updated_at: datetime), @name="product">}
  # モデルの日本語名についてもfactoryを設定します
  # config.factories['商品'] = config.factories['product']

  Pickle::I18n.model_translations.each do |key, value|
    config.factories[key] = config.factories[value]
  end
end


